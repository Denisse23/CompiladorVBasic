package proyectocompi1;
import java_cup.runtime.*;


parser code {:
     /*
     public void syntax_error(Symbol s){
 	System.out.print(s);
     }
    
     public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception {
         System.out.print(s);
     }
     */
:};

terminal sub, abrirparentesis, cerrarparentesis,line, write, read, console, punto, type,  asignacion, empty;
terminal function,  coma, begin, end,  then, to, next,  loop, until, dim, as, not;
terminal Do, If, For, While, Return, Else; //palabras reservadas de java

terminal tipoparametro, tipovar, truefalse, oplog, oprel, opsum, opmult, identificador;
terminal espacio, newline, tab, cadena, comentario;
terminal Integer numero;

non terminal INICIO;
non terminal PROGRAMA;
non terminal PROGRAMA2;
non terminal INDENTACION;
non terminal INDENTACION2;
non terminal INDENTACION3;
non terminal DECLARACION_VARIABLE;
non terminal DECLARACION_VARIABLE2;
non terminal ASIGNAR_TIPO_VARIABLE;
non terminal FUNCION;
non terminal FUNCION2;
non terminal OPCIONES_RETURN;
non terminal PROCEDIMIENTO;
non terminal LISTA_PARAMENTROS;
non terminal LISTA_PARAMENTROS2;
non terminal ESTRUCTURA;
non terminal BLOQUE_PADRE;
non terminal BLOQUE;
non terminal LECTURA;
non terminal ESCRITURA;
non terminal BLOQUE_IF;
non terminal BLOQUE_FOR;
non terminal TIPOS;
non terminal VALORES;
non terminal ARGUMENTOS;
non terminal ARGUMENTOS2;
non terminal EXP;

INICIO::=PROGRAMA
         |newline PROGRAMA
         ;

PROGRAMA::=INDENTACION PROGRAMA
           |INDENTACION PROGRAMA2
           |PROCEDIMIENTO INDENTACION2 PROGRAMA2
           |FUNCION INDENTACION2 PROGRAMA2
           |ESTRUCTURA INDENTACION2 PROGRAMA2
           |BLOQUE INDENTACION2 PROGRAMA2
           ;
PROGRAMA2::=newline PROGRAMA
            |newline
            |
            ;

BLOQUE_PADRE::=newline BLOQUE INDENTACION2  BLOQUE_PADRE
               |newline INDENTACION2
               |newline INDENTACION2 newline
               |newline INDENTACION2 newline INDENTACION3
               |newline INDENTACION3 BLOQUE INDENTACION2 BLOQUE_PADRE
               ;

BLOQUE::=DECLARACION_VARIABLE
         |LECTURA 
         |ESCRITURA
         |BLOQUE_IF
         |BLOQUE_FOR
         ;

INDENTACION3::=INDENTACION 
              |INDENTACION INDENTACION3
              ;
INDENTACION2::=INDENTACION INDENTACION2
               |
               ;

INDENTACION::=espacio 
              |tab
              ;

DECLARACION_VARIABLE::=dim espacio ASIGNAR_TIPO_VARIABLE DECLARACION_VARIABLE2
                       ;

DECLARACION_VARIABLE2::=coma espacio ASIGNAR_TIPO_VARIABLE DECLARACION_VARIABLE2
                        |
                        ;
ASIGNAR_TIPO_VARIABLE::=identificador espacio as espacio TIPOS
                       ;

TIPOS::=tipovar
          |identificador
          ;

PROCEDIMIENTO::=sub espacio identificador abrirparentesis cerrarparentesis INDENTACION2 BLOQUE_PADRE end espacio sub
                |sub espacio identificador abrirparentesis LISTA_PARAMENTROS cerrarparentesis INDENTACION2 BLOQUE_PADRE end espacio sub
                ;

LISTA_PARAMENTROS::=tipoparametro espacio ASIGNAR_TIPO_VARIABLE LISTA_PARAMENTROS2
                    ;

LISTA_PARAMENTROS2::=coma espacio tipoparametro espacio ASIGNAR_TIPO_VARIABLE LISTA_PARAMENTROS2
                     |
                     ;


FUNCION::=function espacio identificador abrirparentesis cerrarparentesis espacio as espacio TIPOS INDENTACION2 BLOQUE_PADRE Return espacio OPCIONES_RETURN INDENTACION2 newline INDENTACION2 end espacio function
          |function espacio identificador abrirparentesis LISTA_PARAMENTROS cerrarparentesis espacio as espacio TIPOS INDENTACION2 BLOQUE_PADRE Return espacio OPCIONES_RETURN INDENTACION2 newline INDENTACION2 end espacio function
          |function espacio identificador abrirparentesis cerrarparentesis INDENTACION2 BLOQUE_PADRE end espacio function
          |function espacio identificador abrirparentesis LISTA_PARAMENTROS cerrarparentesis INDENTACION2 BLOQUE_PADRE end espacio function
          ;

OPCIONES_RETURN::=EXP
                  |abrirparentesis ARGUMENTOS cerrarparentesis
                  |abrirparentesis cerrarparentesis
                  ;
ARGUMENTOS::=EXP ARGUMENTOS2
             ;

ARGUMENTOS2::=coma espacio EXP ARGUMENTOS2
              |
              ;
VALORES::=identificador
          |truefalse
          |numero
          |cadena
          ;

EXP::=VALORES
       |identificador punto identificador
       |VALORES opmult EXP
       |VALORES opsum EXP
       ;


